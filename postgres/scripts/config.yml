
# postgres:
#     host: database
#     user: postgres
#     password: password
#     database: test
#     port: 5432


postgres:
    host: localhost
    user: postgres
    password: postgres
    database: bmeg_test
    port: 5432


psql_cmd: psql -d bmeg_test

# read from files, into cmd, pipe to into psql cmd
commands:
    - producer: jq -rc '"\(.gid)|\(.label)|\(.data)"'
      consumer: copy vertex(gid, label, data) from stdin csv quote '^' delimiter '|' ;
      files: vertex_files
    - producer: jq -rc '"\(.gid)|\(.label)|\(.from)|\(.to)|\(.data)"'
      consumer: copy edge(gid, label, "from", "to", data) from stdin csv quote '^' delimiter '|' ;
      files: edge_files
    - producer: jq -rc 'del(.data.values) | "\(.gid)|\(.label)|\(.data)"'
      consumer: copy vertex(gid, label, data) from stdin csv quote '^' delimiter '|' ;
      files: matrix_files
    - producer: |
        jq -rc '.gid as $gid |  .data.values | to_entries  | map( . + {gid: $gid} )[]  | select(.value != 0 )  |  "\(.gid)|\(.key)|\(.value)"  '
      consumer: copy matrix(gid, key, val) from stdin csv quote '^' delimiter '|' ;
      files: matrix_files


drop: |
  DROP TABLE IF EXISTS vertex CASCADE;
  DROP TABLE IF EXISTS edge CASCADE;
  DROP TABLE IF EXISTS matrix CASCADE;


ddl: |
  CREATE UNLOGGED TABLE IF NOT EXISTS  vertex (
   gid varchar not null,
   label varchar not null,
   data jsonb
  );

  CREATE UNLOGGED TABLE IF NOT EXISTS  edge (
   gid varchar not null,
   label varchar not null,
   "from" varchar not null,
   "to" varchar not null,
   data jsonb
  );

  CREATE UNLOGGED TABLE IF NOT EXISTS  matrix (
   gid varchar           not null,
   key varchar           not null,
   val double precision  not null
  );


indexes:
  - |
    -- increase worker memory
    set maintenance_work_mem = '45 GB' ;
    set work_mem = '45 GB' ;
    set max_parallel_workers_per_gather = 10 ;
    set effective_io_concurrency = 10 ;
    -- index vertex
    CREATE INDEX vertex_gid_idx ON vertex (gid);
    CREATE INDEX vertex_label_idx ON vertex (label);
    CREATE INDEX vertex_data_idx ON vertex USING gin (data jsonb_path_value_ops);
    ANALYZE vertex ;
  - |
    -- increase worker memory
    set maintenance_work_mem = '45 GB' ;
    set work_mem = '45 GB' ;
    set max_parallel_workers_per_gather = 10 ;
    set effective_io_concurrency = 10 ;
    -- index edges
    CREATE INDEX edge_from_idx ON edge ("from");
    CREATE INDEX edge_to_idx ON edge ("to");
    CREATE INDEX edge_label_from_to_idx ON edge (label, "from", "to");
    CREATE INDEX edge_label_to_from_idx ON edge (label, "to", "from");
    ANALYZE edge ;
  - |
    -- increase worker memory
    set maintenance_work_mem = '45 GB' ;
    set work_mem = '45 GB' ;
    set max_parallel_workers_per_gather = 10 ;
    set effective_io_concurrency = 10 ;
    -- index matrix
    CREATE INDEX matrix_gid_idx on matrix (gid);
    CREATE INDEX matrix_key_val on matrix (key, val);
    ANALYZE matrix ;
